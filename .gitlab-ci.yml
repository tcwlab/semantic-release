---
# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
  - test
  - build

sast:
  stage: test
include:
  - template: Security/SAST.gitlab-ci.yml

# MegaLinter GitLab CI job configuration file
# More info at https://megalinter.github.io/

mega-linter:
  stage: test
  # You can override MegaLinter flavor used to have faster performances
  # More info at https://megalinter.github.io/flavors/
  image: megalinter/megalinter:v5
  script:
    - /bin/bash /entrypoint.sh # if script: ["true"] does not work, you may try ->  script: ["/bin/bash /entrypoint.sh"]
  variables:
    # All available variables are described in documentation
    # https://megalinter.github.io/configuration/
    DEFAULT_WORKSPACE: $CI_PROJECT_DIR
    # ADD YOUR CUSTOM ENV VARIABLES HERE TO OVERRIDE VALUES OF .mega-linter.yml AT THE ROOT OF YOUR REPOSITORY
  artifacts:
    when: always
    paths:
      - report
    expire_in: 1 week

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    -
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PUSH_TOKEN"
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      tag="$CI_COMMIT_REF_SLUG"
      echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      docker build --no-cache -t "$CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}" .
    - |
      echo "Pushing image '$CI_REGISTRY_IMAGE${tag}' to gitlab registry"
      docker push "$CI_REGISTRY_IMAGE:${tag}"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        echo "adding latest tag and publishing to DockerHub"
        docker tag "$CI_REGISTRY_IMAGE:${tag}" "$DOCKERHUB_USERNAME/$CI_PROJECT_NAME:latest"
        docker tag "$CI_REGISTRY_IMAGE:${tag}" "$DOCKERHUB_USERNAME/$CI_PROJECT_NAME:$(date '+%Y%m%d')"
        docker push "$DOCKERHUB_USERNAME/$CI_PROJECT_NAME"
      fi
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
