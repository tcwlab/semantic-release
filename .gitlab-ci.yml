stages:
  - test
  - build

mega-linter:
  stage: test
  image: megalinter/megalinter:v5
  tags:
    - docker
  script: ["true"] # if script: ["true"] does not work, you may try ->  script: [ "/bin/bash /entrypoint.sh" ]
  variables:
    # All available variables are described in documentation
    # https://megalinter.github.io/configuration/
    DEFAULT_WORKSPACE: $CI_PROJECT_DIR
  artifacts:
    when: always
    paths:
      - report
    expire_in: 1 week
  except:
    - main

docker-build:
  stage: build
  # Use the official docker image.
  image: docker:latest
  tags:
    - shell
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PUSH_TOKEN"
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      tag="$CI_COMMIT_REF_SLUG"
      echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      docker build --no-cache -t "$CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}" .
    - |
      echo "Pushing image '$CI_REGISTRY_IMAGE${tag}' to gitlab registry"
      docker push "$CI_REGISTRY_IMAGE:${tag}"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        DATE_TAG=$(date '+%Y%m%d')
        echo "adding latest tag and publishing to DockerHub"
        docker tag "$CI_REGISTRY_IMAGE:${tag}" "$DOCKERHUB_USERNAME/$CI_PROJECT_NAME:latest"
        docker tag "$CI_REGISTRY_IMAGE:${tag}" "$DOCKERHUB_USERNAME/$CI_PROJECT_NAME:$DATE_TAG"
        docker push "$DOCKERHUB_USERNAME/$CI_PROJECT_NAME"
      fi
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
