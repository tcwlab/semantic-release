stages:
  - lint
  - build
  - test
  - publish

mega-linter:
  stage: lint
  image: megalinter/megalinter:v5
  tags:
    - docker
    - linux
  script: ["true"] # if script: ["true"] does not work, you may try ->  script: [ "/bin/bash /entrypoint.sh" ]
  variables:
    # All available variables are described in documentation
    # https://megalinter.github.io/configuration/
    DEFAULT_WORKSPACE: $CI_PROJECT_DIR
  artifacts:
    when: always
    paths:
      - report
    expire_in: 1 week
  except:
    - main

docker-build:
  stage: build
  # Use the official docker image.
  image: docker:latest
  tags:
    - shell
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - echo "Running on branch $CI_COMMIT_BRANCH with tag = $CI_COMMIT_SHORT_SHA"
    - docker build --no-cache -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - echo "Pushing image '$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA' to gitlab registry"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

validate-image:
  stage: test
  image: tcwlab/dgoss:latest
  tags:
    - docker
    - linux
  services:
    - docker:dind
  variables:
    GOSS_FILES_PATH: goss
    GOSS_FILES_STRATEGY: cp
  script:
    - dgoss run -it $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

publish-build:
  stage: publish
  # Use the official docker image.
  image: docker:latest
  tags:
    - shell
  services:
    - docker:dind
  only:
    - main
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PUSH_TOKEN"
  script:
    - DATE_TAG=$(date '+%Y%m%d')
    - echo "adding latest tag and publishing to DockerHub"
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $DOCKERHUB_USERNAME/$CI_PROJECT_NAME:latest
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $DOCKERHUB_USERNAME/$CI_PROJECT_NAME:$DATE_TAG
    - docker push $DOCKERHUB_USERNAME/$CI_PROJECT_NAME:latest
    - docker push $DOCKERHUB_USERNAME/$CI_PROJECT_NAME:$DATE_TAG
